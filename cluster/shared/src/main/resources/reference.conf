akka {
  extensions = ["com.romix.akka.serialization.kryo.KryoSerializationExtension$"]

  actor {
    serializers {
      kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
      java = "akka.serialization.JavaSerializer"
    }

    serialization-bindings {
      "io.kairos.protocol.ClientProtocol$ClientCommand" = kryo
      "io.kairos.protocol.ClientProtocol$ClientEvent" = kryo
      "io.kairos.protocol.RegistryProtocol$RegistryCommand" = kryo
      "io.kairos.protocol.RegistryProtocol$RegistryEvent" = kryo
      "io.kairos.protocol.SchedulerProtocol$SchedulerCommand" = kryo
      "io.kairos.protocol.SchedulerProtocol$SchedulerEvent" = kryo

      "io.kairos.cluster.protocol.WorkerProtocol$MasterMessage" = kryo
      "io.kairos.cluster.protocol.WorkerProtocol$WorkerMessage" = kryo
      "io.kairos.cluster.protocol.WorkerProtocol$WorkerEvent" = kryo
    }
  }
}

kairos.resolver {

  work-dir = "target/ivy"
  resolution-cache-dir = "target/ivy/cache"
  repository-cache-dir = "target/ivy/local"

  repositories = [ ]

}