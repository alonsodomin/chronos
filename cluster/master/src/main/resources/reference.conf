akka {
  actor.provider = "akka.cluster.ClusterActorRefProvider"

  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
  extensions = [
    "akka.cluster.client.ClusterClientReceptionist",
    "akka.cluster.metrics.ClusterMetricsExtension"
  ]

  remote {
    log-remote-lifecycle-events = off
    netty.tcp.port = 2551

    trusted-selection-paths = [
      "/user/kairos"
    ]
  }

  cluster {
    roles = ["registry", "scheduler"]

    seed-nodes = [ ]

    auto-down-unreachable-after = 10s
  }

  persistence {
    journal.plugin = "cassandra-journal"
    snapshot-store.plugin = "cassandra-snapshot-store"
  }

  sharding {
    state-store-mode = "persistence"

    journal-plugin-id = "cassandra-journal"
    snapshot-plugin-id = "cassandra-snapshot-store"
  }
}

cassandra-journal {
  keyspace = "kairos"
}

cassandra-snapshot-store {
  keyspace = "kairos_snapshot"
}

kairos {
  http {
    bind-interface = 0.0.0.0
    bind-port = 8095
  }

  task-queue {
    max-work-timeout = 10m
  }
}