quckoo {
  http {
    bind-interface = 0.0.0.0
    bind-port = 8095
  }

  task-queue {
    max-work-timeout = 10m
  }

  api-dispatcher {
    type = Dispatcher
    executor = "fork-join-executor"

    for-join-executor {
      parallelism-min = 2
      parallelism-max = 10
      parallelism-factor = 2.0
    }

    throughput = 10
  }

  trigger-dispatcher {
    type = Dispatcher
    executor = "thread-pool-executor"

    thread-pool-executor {
      core-pool-size-min = 4
      core-pool-size-max = 10
      core-pool-size-factor = 2.0
    }

    throughput = 10
  }

}

akka {
  actor.provider = "akka.cluster.ClusterActorRefProvider"

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  extensions = [
    "akka.cluster.client.ClusterClientReceptionist",
    "akka.cluster.metrics.ClusterMetricsExtension"
  ]

  remote {
    log-remote-lifecycle-events = off
    netty.tcp.port = 2551

    trusted-selection-paths = [
      "/user/kairos"
    ]
  }

  cluster {
    roles = ["registry", "scheduler"]

    seed-nodes = [ ]

    auto-down-unreachable-after = 10s
  }

  persistence {
    journal {
      plugin = "cassandra-journal"

      cassandra-journal {
        event-adapters {
          scheduler-tag = "io.quckoo.cluster.scheduler.SchedulerTagEventAdapter"
        }

        event-adapter-bindings {
          "io.quckoo.protocol.scheduler.SchedulerEvent" = scheduler-tag
          "io.quckoo.cluster.scheduler.ExecutionDriver$Created" = scheduler-tag
        }
      }
    }

    snapshot-store.plugin = "cassandra-snapshot-store"
  }

  sharding {
    state-store-mode = "persistence"

    journal-plugin-id = "cassandra-journal"
    snapshot-plugin-id = "cassandra-snapshot-store"
  }
}

cassandra-journal {
  keyspace = "quckoo"

  tags {
    ExecutionPlan = 1
    Task          = 2
  }

}

cassandra-snapshot-store {
  keyspace = "quckoo_snapshot"
}
